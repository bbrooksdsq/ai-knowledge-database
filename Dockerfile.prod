# Multi-stage build for production
FROM node:18-alpine AS frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./
# Install all dependencies (including dev) for build step
RUN npm ci
COPY frontend/ ./
# Build (Next will export static files due to output: 'export')
RUN npm run build

FROM python:3.11-slim AS backend

WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    nginx \
    && rm -rf /var/lib/apt/lists/*

# Copy backend requirements and install
COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy backend code
COPY backend/ .

# Copy exported frontend
COPY --from=frontend-builder /app/frontend/out ./static

# Create uploads directory
RUN mkdir -p uploads

# Configure nginx (use template rendered at runtime with PORT)
COPY nginx.conf.template /etc/nginx/nginx.conf.template

# Expose port (Railway sets PORT; nginx listens on 80 inside container)
EXPOSE 80

# Start script
COPY start-prod.sh .
RUN chmod +x start-prod.sh

CMD ["./start-prod.sh"]
